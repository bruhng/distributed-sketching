// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.20.3
// source: sketch.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CountSketch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rows          []*IntRow              `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	Seeds         []uint32               `protobuf:"varint,2,rep,packed,name=seeds,proto3" json:"seeds,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountSketch) Reset() {
	*x = CountSketch{}
	mi := &file_sketch_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountSketch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountSketch) ProtoMessage() {}

func (x *CountSketch) ProtoReflect() protoreflect.Message {
	mi := &file_sketch_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountSketch.ProtoReflect.Descriptor instead.
func (*CountSketch) Descriptor() ([]byte, []int) {
	return file_sketch_proto_rawDescGZIP(), []int{0}
}

func (x *CountSketch) GetRows() []*IntRow {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *CountSketch) GetSeeds() []uint32 {
	if x != nil {
		return x.Seeds
	}
	return nil
}

func (x *CountSketch) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type IntRow struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Val           []int64                `protobuf:"varint,1,rep,packed,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IntRow) Reset() {
	*x = IntRow{}
	mi := &file_sketch_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IntRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntRow) ProtoMessage() {}

func (x *IntRow) ProtoReflect() protoreflect.Message {
	mi := &file_sketch_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntRow.ProtoReflect.Descriptor instead.
func (*IntRow) Descriptor() ([]byte, []int) {
	return file_sketch_proto_rawDescGZIP(), []int{1}
}

func (x *IntRow) GetVal() []int64 {
	if x != nil {
		return x.Val
	}
	return nil
}

type CountQueryReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Res           int64                  `protobuf:"varint,1,opt,name=res,proto3" json:"res,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountQueryReply) Reset() {
	*x = CountQueryReply{}
	mi := &file_sketch_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountQueryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountQueryReply) ProtoMessage() {}

func (x *CountQueryReply) ProtoReflect() protoreflect.Message {
	mi := &file_sketch_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountQueryReply.ProtoReflect.Descriptor instead.
func (*CountQueryReply) Descriptor() ([]byte, []int) {
	return file_sketch_proto_rawDescGZIP(), []int{2}
}

func (x *CountQueryReply) GetRes() int64 {
	if x != nil {
		return x.Res
	}
	return 0
}

type KLLSketch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rows          []*OrderedRow          `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	N             int64                  `protobuf:"varint,2,opt,name=n,proto3" json:"n,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KLLSketch) Reset() {
	*x = KLLSketch{}
	mi := &file_sketch_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KLLSketch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KLLSketch) ProtoMessage() {}

func (x *KLLSketch) ProtoReflect() protoreflect.Message {
	mi := &file_sketch_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KLLSketch.ProtoReflect.Descriptor instead.
func (*KLLSketch) Descriptor() ([]byte, []int) {
	return file_sketch_proto_rawDescGZIP(), []int{3}
}

func (x *KLLSketch) GetRows() []*OrderedRow {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *KLLSketch) GetN() int64 {
	if x != nil {
		return x.N
	}
	return 0
}

func (x *KLLSketch) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type OrderedRow struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Values        []*OrderedValue        `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderedRow) Reset() {
	*x = OrderedRow{}
	mi := &file_sketch_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderedRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderedRow) ProtoMessage() {}

func (x *OrderedRow) ProtoReflect() protoreflect.Message {
	mi := &file_sketch_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderedRow.ProtoReflect.Descriptor instead.
func (*OrderedRow) Descriptor() ([]byte, []int) {
	return file_sketch_proto_rawDescGZIP(), []int{4}
}

func (x *OrderedRow) GetValues() []*OrderedValue {
	if x != nil {
		return x.Values
	}
	return nil
}

type OrderedValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Value:
	//
	//	*OrderedValue_IntVal
	//	*OrderedValue_FloatVal
	Value         isOrderedValue_Value `protobuf_oneof:"value"`
	Type          string               `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderedValue) Reset() {
	*x = OrderedValue{}
	mi := &file_sketch_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderedValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderedValue) ProtoMessage() {}

func (x *OrderedValue) ProtoReflect() protoreflect.Message {
	mi := &file_sketch_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderedValue.ProtoReflect.Descriptor instead.
func (*OrderedValue) Descriptor() ([]byte, []int) {
	return file_sketch_proto_rawDescGZIP(), []int{5}
}

func (x *OrderedValue) GetValue() isOrderedValue_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *OrderedValue) GetIntVal() int64 {
	if x != nil {
		if x, ok := x.Value.(*OrderedValue_IntVal); ok {
			return x.IntVal
		}
	}
	return 0
}

func (x *OrderedValue) GetFloatVal() float32 {
	if x != nil {
		if x, ok := x.Value.(*OrderedValue_FloatVal); ok {
			return x.FloatVal
		}
	}
	return 0
}

func (x *OrderedValue) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type isOrderedValue_Value interface {
	isOrderedValue_Value()
}

type OrderedValue_IntVal struct {
	IntVal int64 `protobuf:"varint,1,opt,name=int_val,json=intVal,proto3,oneof"`
}

type OrderedValue_FloatVal struct {
	FloatVal float32 `protobuf:"fixed32,2,opt,name=float_val,json=floatVal,proto3,oneof"`
}

func (*OrderedValue_IntVal) isOrderedValue_Value() {}

func (*OrderedValue_FloatVal) isOrderedValue_Value() {}

type AnyValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Value:
	//
	//	*AnyValue_IntVal
	//	*AnyValue_FloatVal
	//	*AnyValue_StringVal
	//	*AnyValue_UintVal
	Value         isAnyValue_Value `protobuf_oneof:"value"`
	Type          string           `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnyValue) Reset() {
	*x = AnyValue{}
	mi := &file_sketch_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnyValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnyValue) ProtoMessage() {}

func (x *AnyValue) ProtoReflect() protoreflect.Message {
	mi := &file_sketch_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnyValue.ProtoReflect.Descriptor instead.
func (*AnyValue) Descriptor() ([]byte, []int) {
	return file_sketch_proto_rawDescGZIP(), []int{6}
}

func (x *AnyValue) GetValue() isAnyValue_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *AnyValue) GetIntVal() int64 {
	if x != nil {
		if x, ok := x.Value.(*AnyValue_IntVal); ok {
			return x.IntVal
		}
	}
	return 0
}

func (x *AnyValue) GetFloatVal() float32 {
	if x != nil {
		if x, ok := x.Value.(*AnyValue_FloatVal); ok {
			return x.FloatVal
		}
	}
	return 0
}

func (x *AnyValue) GetStringVal() string {
	if x != nil {
		if x, ok := x.Value.(*AnyValue_StringVal); ok {
			return x.StringVal
		}
	}
	return ""
}

func (x *AnyValue) GetUintVal() uint64 {
	if x != nil {
		if x, ok := x.Value.(*AnyValue_UintVal); ok {
			return x.UintVal
		}
	}
	return 0
}

func (x *AnyValue) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type isAnyValue_Value interface {
	isAnyValue_Value()
}

type AnyValue_IntVal struct {
	IntVal int64 `protobuf:"varint,1,opt,name=int_val,json=intVal,proto3,oneof"`
}

type AnyValue_FloatVal struct {
	FloatVal float32 `protobuf:"fixed32,2,opt,name=float_val,json=floatVal,proto3,oneof"`
}

type AnyValue_StringVal struct {
	StringVal string `protobuf:"bytes,3,opt,name=string_val,json=stringVal,proto3,oneof"`
}

type AnyValue_UintVal struct {
	UintVal uint64 `protobuf:"varint,4,opt,name=uint_val,json=uintVal,proto3,oneof"`
}

func (*AnyValue_IntVal) isAnyValue_Value() {}

func (*AnyValue_FloatVal) isAnyValue_Value() {}

func (*AnyValue_StringVal) isAnyValue_Value() {}

func (*AnyValue_UintVal) isAnyValue_Value() {}

type ReverseQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Phi           float32                `protobuf:"fixed32,1,opt,name=phi,proto3" json:"phi,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReverseQuery) Reset() {
	*x = ReverseQuery{}
	mi := &file_sketch_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReverseQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReverseQuery) ProtoMessage() {}

func (x *ReverseQuery) ProtoReflect() protoreflect.Message {
	mi := &file_sketch_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReverseQuery.ProtoReflect.Descriptor instead.
func (*ReverseQuery) Descriptor() ([]byte, []int) {
	return file_sketch_proto_rawDescGZIP(), []int{7}
}

func (x *ReverseQuery) GetPhi() float32 {
	if x != nil {
		return x.Phi
	}
	return 0
}

func (x *ReverseQuery) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type QueryReturn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Phi           int64                  `protobuf:"varint,1,opt,name=phi,proto3" json:"phi,omitempty"`
	N             int64                  `protobuf:"varint,2,opt,name=N,proto3" json:"N,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryReturn) Reset() {
	*x = QueryReturn{}
	mi := &file_sketch_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryReturn) ProtoMessage() {}

func (x *QueryReturn) ProtoReflect() protoreflect.Message {
	mi := &file_sketch_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryReturn.ProtoReflect.Descriptor instead.
func (*QueryReturn) Descriptor() ([]byte, []int) {
	return file_sketch_proto_rawDescGZIP(), []int{8}
}

func (x *QueryReturn) GetPhi() int64 {
	if x != nil {
		return x.Phi
	}
	return 0
}

func (x *QueryReturn) GetN() int64 {
	if x != nil {
		return x.N
	}
	return 0
}

type MergeReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        int64                  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MergeReply) Reset() {
	*x = MergeReply{}
	mi := &file_sketch_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MergeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeReply) ProtoMessage() {}

func (x *MergeReply) ProtoReflect() protoreflect.Message {
	mi := &file_sketch_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeReply.ProtoReflect.Descriptor instead.
func (*MergeReply) Descriptor() ([]byte, []int) {
	return file_sketch_proto_rawDescGZIP(), []int{9}
}

func (x *MergeReply) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type PlotRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NumBins       int64                  `protobuf:"varint,1,opt,name=numBins,proto3" json:"numBins,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlotRequest) Reset() {
	*x = PlotRequest{}
	mi := &file_sketch_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlotRequest) ProtoMessage() {}

func (x *PlotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sketch_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlotRequest.ProtoReflect.Descriptor instead.
func (*PlotRequest) Descriptor() ([]byte, []int) {
	return file_sketch_proto_rawDescGZIP(), []int{10}
}

func (x *PlotRequest) GetNumBins() int64 {
	if x != nil {
		return x.NumBins
	}
	return 0
}

func (x *PlotRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type PlotKllReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Step          float32                `protobuf:"fixed32,1,opt,name=step,proto3" json:"step,omitempty"`
	Pmf           []float32              `protobuf:"fixed32,2,rep,packed,name=pmf,proto3" json:"pmf,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlotKllReply) Reset() {
	*x = PlotKllReply{}
	mi := &file_sketch_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlotKllReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlotKllReply) ProtoMessage() {}

func (x *PlotKllReply) ProtoReflect() protoreflect.Message {
	mi := &file_sketch_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlotKllReply.ProtoReflect.Descriptor instead.
func (*PlotKllReply) Descriptor() ([]byte, []int) {
	return file_sketch_proto_rawDescGZIP(), []int{11}
}

func (x *PlotKllReply) GetStep() float32 {
	if x != nil {
		return x.Step
	}
	return 0
}

func (x *PlotKllReply) GetPmf() []float32 {
	if x != nil {
		return x.Pmf
	}
	return nil
}

var File_sketch_proto protoreflect.FileDescriptor

var file_sketch_proto_rawDesc = string([]byte{
	0x0a, 0x0c, 0x73, 0x6b, 0x65, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5a, 0x0a, 0x0b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x6b,
	0x65, 0x74, 0x63, 0x68, 0x12, 0x21, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x74, 0x52, 0x6f,
	0x77, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x65, 0x65, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x65, 0x65, 0x64, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x22, 0x1a, 0x0a, 0x06, 0x49, 0x6e, 0x74, 0x52, 0x6f, 0x77, 0x12, 0x10, 0x0a, 0x03, 0x76,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x23, 0x0a,
	0x0f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x72,
	0x65, 0x73, 0x22, 0x54, 0x0a, 0x09, 0x4b, 0x4c, 0x4c, 0x53, 0x6b, 0x65, 0x74, 0x63, 0x68, 0x12,
	0x25, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x52, 0x6f, 0x77,
	0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x0c, 0x0a, 0x01, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x01, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x39, 0x0a, 0x0a, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x65, 0x64, 0x52, 0x6f, 0x77, 0x12, 0x2b, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x22, 0x65, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x19, 0x0a, 0x07, 0x69, 0x6e, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x06, 0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x12, 0x1d,
	0x0a, 0x09, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x02, 0x48, 0x00, 0x52, 0x08, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x9f, 0x01, 0x0a, 0x08, 0x41,
	0x6e, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x19, 0x0a, 0x07, 0x69, 0x6e, 0x74, 0x5f, 0x76,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x06, 0x69, 0x6e, 0x74, 0x56,
	0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x09, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x08, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61,
	0x6c, 0x12, 0x1f, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x08, 0x75, 0x69, 0x6e, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x07, 0x75, 0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x34, 0x0a, 0x0c,
	0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x70, 0x68, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x70, 0x68, 0x69, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x22, 0x2d, 0x0a, 0x0b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x68, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x70, 0x68, 0x69, 0x12, 0x0c, 0x0a, 0x01, 0x4e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01,
	0x4e, 0x22, 0x24, 0x0a, 0x0a, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x3b, 0x0a, 0x0b, 0x50, 0x6c, 0x6f, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x75, 0x6d, 0x42, 0x69, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6e, 0x75, 0x6d, 0x42, 0x69, 0x6e, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x22, 0x34, 0x0a, 0x0c, 0x50, 0x6c, 0x6f, 0x74, 0x4b, 0x6c, 0x6c, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6d, 0x66, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x02, 0x52, 0x03, 0x70, 0x6d, 0x66, 0x32, 0xd9, 0x02, 0x0a, 0x08, 0x53,
	0x6b, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x08, 0x4d, 0x65, 0x72, 0x67, 0x65,
	0x4b, 0x6c, 0x6c, 0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4b, 0x4c, 0x4c, 0x53,
	0x6b, 0x65, 0x74, 0x63, 0x68, 0x1a, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65,
	0x72, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x08, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4b, 0x6c, 0x6c, 0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x12, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x22,
	0x00, 0x12, 0x3d, 0x0a, 0x0f, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4b, 0x6c, 0x6c, 0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x76,
	0x65, 0x72, 0x73, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x00,
	0x12, 0x34, 0x0a, 0x07, 0x50, 0x6c, 0x6f, 0x74, 0x4b, 0x6c, 0x6c, 0x12, 0x12, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x6f, 0x74, 0x4b, 0x6c, 0x6c, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x0a, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x53, 0x6b, 0x65, 0x74, 0x63, 0x68, 0x1a, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x37, 0x0a,
	0x0a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6e, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x16, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x2f, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x72, 0x75, 0x68, 0x6e, 0x67, 0x2f, 0x64, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x64, 0x2d, 0x73, 0x6b, 0x65, 0x74, 0x63, 0x68, 0x69, 0x6e,
	0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_sketch_proto_rawDescOnce sync.Once
	file_sketch_proto_rawDescData []byte
)

func file_sketch_proto_rawDescGZIP() []byte {
	file_sketch_proto_rawDescOnce.Do(func() {
		file_sketch_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sketch_proto_rawDesc), len(file_sketch_proto_rawDesc)))
	})
	return file_sketch_proto_rawDescData
}

var file_sketch_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_sketch_proto_goTypes = []any{
	(*CountSketch)(nil),     // 0: proto.CountSketch
	(*IntRow)(nil),          // 1: proto.IntRow
	(*CountQueryReply)(nil), // 2: proto.CountQueryReply
	(*KLLSketch)(nil),       // 3: proto.KLLSketch
	(*OrderedRow)(nil),      // 4: proto.OrderedRow
	(*OrderedValue)(nil),    // 5: proto.OrderedValue
	(*AnyValue)(nil),        // 6: proto.AnyValue
	(*ReverseQuery)(nil),    // 7: proto.ReverseQuery
	(*QueryReturn)(nil),     // 8: proto.QueryReturn
	(*MergeReply)(nil),      // 9: proto.MergeReply
	(*PlotRequest)(nil),     // 10: proto.PlotRequest
	(*PlotKllReply)(nil),    // 11: proto.PlotKllReply
}
var file_sketch_proto_depIdxs = []int32{
	1,  // 0: proto.CountSketch.rows:type_name -> proto.IntRow
	4,  // 1: proto.KLLSketch.rows:type_name -> proto.OrderedRow
	5,  // 2: proto.OrderedRow.values:type_name -> proto.OrderedValue
	3,  // 3: proto.Sketcher.MergeKll:input_type -> proto.KLLSketch
	5,  // 4: proto.Sketcher.QueryKll:input_type -> proto.OrderedValue
	7,  // 5: proto.Sketcher.ReverseQueryKll:input_type -> proto.ReverseQuery
	10, // 6: proto.Sketcher.PlotKll:input_type -> proto.PlotRequest
	0,  // 7: proto.Sketcher.MergeCount:input_type -> proto.CountSketch
	6,  // 8: proto.Sketcher.QueryCount:input_type -> proto.AnyValue
	9,  // 9: proto.Sketcher.MergeKll:output_type -> proto.MergeReply
	8,  // 10: proto.Sketcher.QueryKll:output_type -> proto.QueryReturn
	5,  // 11: proto.Sketcher.ReverseQueryKll:output_type -> proto.OrderedValue
	11, // 12: proto.Sketcher.PlotKll:output_type -> proto.PlotKllReply
	9,  // 13: proto.Sketcher.MergeCount:output_type -> proto.MergeReply
	2,  // 14: proto.Sketcher.QueryCount:output_type -> proto.CountQueryReply
	9,  // [9:15] is the sub-list for method output_type
	3,  // [3:9] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_sketch_proto_init() }
func file_sketch_proto_init() {
	if File_sketch_proto != nil {
		return
	}
	file_sketch_proto_msgTypes[5].OneofWrappers = []any{
		(*OrderedValue_IntVal)(nil),
		(*OrderedValue_FloatVal)(nil),
	}
	file_sketch_proto_msgTypes[6].OneofWrappers = []any{
		(*AnyValue_IntVal)(nil),
		(*AnyValue_FloatVal)(nil),
		(*AnyValue_StringVal)(nil),
		(*AnyValue_UintVal)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sketch_proto_rawDesc), len(file_sketch_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sketch_proto_goTypes,
		DependencyIndexes: file_sketch_proto_depIdxs,
		MessageInfos:      file_sketch_proto_msgTypes,
	}.Build()
	File_sketch_proto = out.File
	file_sketch_proto_goTypes = nil
	file_sketch_proto_depIdxs = nil
}
